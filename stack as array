#include<stdio.h>
#include<stdlib.h>
#define CAPACITY 5
int isEmpty();
int isFull();
int pop();
void push(int);
void traverse();
int peek();
int stack[CAPACITY], top=-1, i;
int main()
{
    int ch, item;
    printf("wellcome to stack implementation program\n");
    printf("herer is the menu:-\n");
    printf("1-Push\n");
    printf("2-Pop\n");
    printf("3-traverse\n");
    printf("4-peek\n");
    printf("5-exit program\n");

    printf("enter your choice:-\n");
    scanf("%d", &ch);

    switch(ch)
    {
        case 1: printf("enter the number to push\n");
                scanf("%d", &item);
                push(item);
                break;
        
        case 2: item=pop();
            {
                if(item==0)
                {
                    printf("no value, stack is empty\n");
                } 
                else
                {
                    printf("popped item is %d", item);
                }
            }
            break;
        
        case 3: traverse();
                break;

        case 4: peek();
                break;

        case 5: exit(0);

        default: printf("wrong choice\n");
    }
}
int isEmpty()
{
    if(top==-1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
    
}
int isFull()
{
    if(top==CAPACITY-1)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
void push(int ele)
{
    if(isFull())
    {
        printf("stack is full\n");
    }
    else
    {
        top++;
        stack[top]=ele;
        printf("element pushed\n");
    }
}
int pop()
{
    if (isEmpty())
    {
        printf("stack is empty\n");
    }
    else
    {
        return stack[top--];
    }   
}
int peek()
{
    if(isEmpty())
    {
        printf("stack is empty\n");
    }
    else
    {
        return stack[top];
    }
    
}
void traverse()
{
    if(isEmpty())
    {
        printf("stack is empty");
    }
    else
    {
        for(i=0;i<top;i++)
        {
            printf("%d", stack[i]);
        }
    }
    
}
